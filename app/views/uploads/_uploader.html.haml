!!!
%html
  %head
    %meta{:charset => "utf-8"}

    %script{:src => "//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"}
    %script{:src => "//ajax.googleapis.com/ajax/libs/jqueryui/1.8.17/jquery-ui.min.js"}

    / The Iframe Transport is required for browsers without support for XHR file uploads
    %script{:src => "js/jquery.iframe-transport.js"}
    / The basic File Upload plugin
    %script{:src => "js/jquery.fileupload.js"}

    :css

      body{
        font-family: verdana, arial, helvetica, sans-serif;
        font-size:12px;
        color:#666666;
        margin:0;
        padding:0;
        height: 300px;
      }

      progress{
        width: 200px;
      }

      #drag_text{
        position: absolute;
        z-index: 0;
        top:0;
        left:0;
        width: 500px;
        padding-top:100px;
        text-align: center;
        font-size: 2em;
        font-weight: bold;
        color: #ddd;
        font-style:italic;
      }

      #uploading_files, #file_upload{
        position: relative;
        z-index: 1;
      }

      #drag_remark{
        font-size: 0.5em;
      }

      .remove_link{
        color: red;
        text-decoration: none;
      }


  %body

    #drag_text
      drop files here
      %br
      %span#drag_remark
        file drag'n'drop works in Google Chrome, Firefox 4+ and Safari 5+
        %br
        (buggy in Windows Safari)

    %form#file_upload(action="" method="post" enctype="multipart/form-data")
      %input{:type => :hidden, :name => :key}
      %input{:type => :hidden, :name => "AWSAccessKeyId"}
      %input{:type => :hidden, :name => :acl, value: 'public-read'}
      %input{:type => :hidden, :name => :success_action_status, :value => "201"}
      %input{:type => :hidden, :name => :policy}
      %input{:type => :hidden, :name => :signature}

      %input{:type => :file, :name => 'file', multiple: ''}

    #uploading_files


    :javascript
      $(function() {
      //alert(location.href.replace(/%2F/g, '/').replace(/%3D/g, '='))
        var params = location.href.replace(/%3D/g, '=').split('?')[1].split('&');

        for (x in params){
          $('#file_upload input[name=' + params[x].split('=')[0] + ']').val(params[x].substring(params[x].search('=')+1));
         }
        // Opera doesn't handle multiple files properly so use single file selection there
        if (navigator.appName == 'Opera') {
          $('#file_upload').find('input:file').each(function () {
            $(this).removeAttr('multiple')
                // Fix for Opera, which ignores just removing the multiple attribute:
                .replaceWith($(this).clone(true));
          });
        }

        function xhrUploadProgressSupported(){
          var xhr = new XMLHttpRequest();
          return !! (xhr && ('upload' in xhr) && ('onprogress' in xhr.upload));
        }

        $('#file_upload').fileupload({
          dropZone: $(document.body),
          url: "#{s3_bucket_url}",
          formData: function (form) {
            return form.serializeArray();
          },
          fail: function(e, data) {
          //
          },
          add: function (e, data) {
            // Can only track progress if size property is present on files.

            progressSupported = xhrUploadProgressSupported();
            $.each(data.files, function (index, file) {
              if( progressSupported ){
                var uploadPercent = "<br/><progress value='0' max='100' class='upload_progress_bar'>0</progress> <span class='upload_percentage'>0</span>" + '%';
                $('#uploading_files').append("<p class='uploading_file'>" + file.name + uploadPercent + " <a href='#' class='remove_link'>X<a/></p>");
              } else
                $('#uploading_files').append("<p class='uploading_file'>" + file.name + "<br/><img src='img/uploading.gif'/></p>");
            });

            data.context = $('.uploading_file').last();
            data.jqXHR = data.submit();

            $('.uploading_file .remove_link').last().click(function (e) {
              data.jqXHR.abort();
              data.context.hide()
            });
          },
          progress: function (e, data) {
            if( xhrUploadProgressSupported() ){
              var progress = parseInt(data.loaded / data.total * 100, 10);
              data.context.find('.upload_percentage').html(progress);
              data.context.find('.upload_progress_bar').val(progress);
            }
          },
          done: function (e, data) {
            data.context.hide();
            var file = data.files[0];
            //var params = { file_name: file.name }
            //if ('size' in file)
            //  params.file_size = file.size;
            //if ('type' in file)
            //  params.file_type = file.type;
            //$.ajax('#{after_upload_url}',
            //  { type: 'POST',
            //    data: "upload[file_name]=" + encodeURIComponent(file.name)  } )
          },
          stop: function(e){
            $('.uploading_file').remove()
          }
        });
      });