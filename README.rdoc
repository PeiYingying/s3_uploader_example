== S3 Uploader Rails Example

Based on the great jQuery File Upload plugin: http://blueimp.github.com/jQuery-File-Upload/

Features:

* No flash :)
* Uploads straight to S3 without hitting the server first
* File Progress Indicator (Chrome, Firefox, Safari)
* Multiple file selection, parallel upload (Chrome, Firefox, Safari)
* Drag'n'Drop (Firefox 4+, Safari 5+ - buggy on windows, Google Chrome)
* Internet Explorer and Opera fall back to iframe transport single file uploads

Tested with Chrome, Firefox, Safari, Opera and IE 7

Gets around S3's lacking cross domain access header support by storing the upload form on s3, embedded in an iframe.
Upload progress is displayed on the host server by utilizing postMessage browser communication.

After a file is uploaded a post ajax request is made to create a resource for the uploaded file in the db.

== Getting Started

1. Install gems
    bundle install

2. Migrate database
    bundle exec rake db:migrate

3. Make sure the following environment variables are set:
    ENV['S3_UPLOADER_BUCKET']
    ENV['S3_UPLOADER_ACCESS_KEY']
    ENV['S3_UPLOADER_SECRET_ACCESS_KEY']

4. Set your server host in app/assets/javascripts/s3_uploader/s3_uploader.js:
    var host = 'http://yourdomain.com';

5. Deploy uploader javascript and form to s3
    bundle exec rake uploader:deploy

6. Run or deploy the app :)

== Notes

* The uploader location on s3 is currently hardcoded to \\http://#{ENV['S3_UPLOADER_BUCKET']}.s3.amazonaws.com/uploader.

* The path for the uploaded files defaults to "#{controller_name}/:uuid" and can be changed in the s3_uploader
  helper options via the :uploaded_files_path parameter. Currently the path must have the :uuid placeholder in it.
  It is replaced with a random string for each uploaded file.
